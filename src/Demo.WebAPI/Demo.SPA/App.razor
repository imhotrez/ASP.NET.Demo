@using Demo.SPA.Services
@using Demo.Models.Dto
@inject CommonStateService commonStateService;
@inject IJSRuntime js;
@inject AuthService authService;
@inject NavigationManager manager;

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
<AntContainer />

@code{

    protected override async Task OnInitializedAsync() {
        commonStateService.OnChange += StateHasChanged;
        var refreshTokenRequest = new RefreshTokenRequest {
            FingerPrint = await js.InvokeAsync<string>("initFingerprintJS")
        };
        await authService.RefreshSession(refreshTokenRequest, default);
        manager.NavigateTo(!commonStateService.IsLoggedIn ? "login" : "myphotos");
        await base.OnInitializedAsync();
    }
    
    public void Dispose() { commonStateService.OnChange -= StateHasChanged; }
}